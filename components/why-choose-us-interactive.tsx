"use client"

import { motion } from "framer-motion"
import { useInView } from "framer-motion"
import { useRef, useState } from "react"
import { Award, Package, RefreshCw, Headphones, Rocket, CheckCircle } from "lucide-react"

const reasons = [
  {
    icon: Award,
    title: "–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω –∏ –ª–∏—Ü–µ–Ω–∑–∏—è Rick & Morty",
    description:
      "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∫—É–ª—å—Ç–æ–≤–æ–≥–æ –º—É–ª—å—Ç—Å–µ—Ä–∏–∞–ª–∞. –î–∞, –º—ã –¥–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å —Å —Å–∞–º–∏–º –†–∏–∫–æ–º!",
    benefits: ["–£–∑–Ω–∞–≤–∞–µ–º—ã–π –±—Ä–µ–Ω–¥", "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è", "–ö—É–ª—å—Ç–æ–≤—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏"],
    color: "from-yellow-400 to-orange-500",
    bgColor: "from-yellow-400/10 to-orange-500/10",
  },
  {
    icon: Package,
    title: "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —à–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç",
    description: "30+ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –≤–∫—É—Å–æ–≤ –≤ —á–µ—Ç—ã—Ä–µ—Ö –∫—Ä—É–ø–Ω—ã—Ö –ª–∏–Ω–µ–π–∫–∞—Ö. –û—Ç –∫–ª–∞—Å—Å–∏–∫–∏ –¥–æ –±–µ–∑—É–º–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ ‚Äî –µ—Å—Ç—å –≤—Å—ë!",
    benefits: ["30+ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –≤–∫—É—Å–æ–≤", "4 –ª–∏–Ω–µ–π–∫–∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏", "–ü–æ–ª–Ω–∞—è –ª–∏–Ω–µ–π–∫–∞"],
    color: "from-green-400 to-emerald-500",
    bgColor: "from-green-400/10 to-emerald-500/10",
  },
  {
    icon: RefreshCw,
    title: "–ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∫—É—Å–æ–≤ –∏ –∫–æ–ª–ª–µ–∫—Ü–∏–π",
    description: "–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –Ω–æ–≤–∏–Ω–∫–∏ –∏ –ª–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—ã–ø—É—Å–∫–∏. –°–∫—É—á–Ω–æ –Ω–µ –±—É–¥–µ—Ç ‚Äî –æ–±–µ—â–∞–µ–º!",
    benefits: ["–†–µ–≥—É–ª—è—Ä–Ω—ã–µ –Ω–æ–≤–∏–Ω–∫–∏", "–õ–∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—ã–ø—É—Å–∫–∏", "–í—Å–µ–≥–¥–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ"],
    color: "from-purple-400 to-pink-500",
    bgColor: "from-purple-400/10 to-pink-500/10",
  },
  {
    icon: Headphones,
    title: "–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –æ—Ç–≥—Ä—É–∑–∫–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤",
    description: "–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –∏ –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞. –ú—ã –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏, –∫–∞–∫ —Ö–æ—Ä–æ—à–∏–π –¥—Ä—É–≥.",
    benefits: ["–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞", "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7", "–õ–∏—á–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä"],
    color: "from-blue-400 to-cyan-500",
    bgColor: "from-blue-400/10 to-cyan-500/10",
  },
  {
    icon: Rocket,
    title: "–ü–æ–º–æ–≥–∞–µ–º —Å –∑–∞–ø—É—Å–∫–æ–º –∏ —Ä–µ–∫–ª–∞–º–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏",
    description: "–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ. –î–µ–ª–∞–µ–º –≤–∞—à —É—Å–ø–µ—Ö —Å–≤–æ–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º!",
    benefits: ["–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã", "–ü–æ–º–æ—â—å –≤ –∑–∞–ø—É—Å–∫–µ", "–û–±—É—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞"],
    color: "from-red-400 to-pink-500",
    bgColor: "from-red-400/10 to-pink-500/10",
  },
]

export function WhyChooseUsInteractive() {
  const ref = useRef(null)
  const isInView = useInView(ref, { once: true, margin: "-100px" })
  const [activeCard, setActiveCard] = useState<number | null>(null)

  return (
    <section className="py-20 relative overflow-hidden">
      <div className="absolute inset-0 bg-gradient-to-b from-black to-gray-900" />

      {/* Animated background */}
      <div className="absolute inset-0">
        <div className="absolute top-1/4 left-1/4 w-64 h-64 bg-green-400/5 rounded-full blur-3xl animate-pulse" />
        <div
          className="absolute bottom-1/4 right-1/4 w-64 h-64 bg-purple-500/5 rounded-full blur-3xl animate-pulse"
          style={{ animationDelay: "1s" }}
        />
      </div>

      <div className="container mx-auto px-4 relative z-10" ref={ref}>
        <motion.div
          className="text-center mb-16"
          initial={{ opacity: 0, y: 50 }}
          animate={isInView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.6 }}
        >
          <h2 className="text-4xl md:text-5xl font-bold mb-6">
            –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç{" "}
            <span className="bg-gradient-to-r from-green-400 to-purple-500 bg-clip-text text-transparent">–Ω–∞—Å</span>
          </h2>
          <p className="text-xl text-gray-300 max-w-3xl mx-auto mb-6">
            –ú—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–∞–µ–º –≤–µ–π–ø ‚Äî –º—ã —Å–æ–∑–¥–∞–µ–º –æ–ø—ã—Ç! –í–æ—Ç –ø–æ—á–µ–º—É –ø–∞—Ä—Ç–Ω–µ—Ä—ã –æ—Å—Ç–∞—é—Ç—Å—è —Å –Ω–∞–º–∏ –Ω–∞–¥–æ–ª–≥–æ üöÄ
          </p>
          <div className="w-24 h-1 bg-gradient-to-r from-green-400 to-purple-500 mx-auto rounded-full" />
        </motion.div>

        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6 lg:gap-8">
          {reasons.map((reason, index) => {
            const Icon = reason.icon
            const isActive = activeCard === index

            return (
              <motion.div
                key={index}
                className="group relative cursor-pointer"
                initial={{ opacity: 0, y: 50 }}
                animate={isInView ? { opacity: 1, y: 0 } : {}}
                transition={{ duration: 0.6, delay: index * 0.1 }}
                onHoverStart={() => setActiveCard(index)}
                onHoverEnd={() => setActiveCard(null)}
                onClick={() => setActiveCard(activeCard === index ? null : index)}
              >
                <motion.div
                  className={`relative p-6 lg:p-8 bg-gray-800/50 backdrop-blur-sm rounded-2xl border border-gray-700/50 transition-all duration-300 overflow-hidden ${
                    isActive ? "border-green-400/50 shadow-2xl shadow-green-400/10" : "hover:border-gray-600/50"
                  }`}
                  animate={{
                    scale: isActive ? 1.02 : 1,
                    y: isActive ? -5 : 0,
                  }}
                  transition={{ duration: 0.3 }}
                >
                  {/* Background gradient */}
                  <div
                    className={`absolute inset-0 bg-gradient-to-br ${reason.bgColor} opacity-0 transition-opacity duration-500 ${
                      isActive ? "opacity-100" : "group-hover:opacity-50"
                    }`}
                  />

                  {/* Decorative elements */}
                  <div className="absolute -top-4 -right-4 w-16 h-16 bg-white/5 rounded-full blur-xl" />
                  <div className="absolute -bottom-4 -left-4 w-20 h-20 bg-white/3 rounded-full blur-xl" />

                  <div className="relative z-10 space-y-4">
                    {/* Icon */}
                    <motion.div
                      className={`w-14 h-14 lg:w-16 lg:h-16 bg-gradient-to-r ${reason.color} rounded-xl flex items-center justify-center shadow-lg`}
                      animate={{
                        rotate: isActive ? 360 : 0,
                        scale: isActive ? 1.1 : 1,
                      }}
                      transition={{ duration: 0.6 }}
                    >
                      <Icon className="w-7 h-7 lg:w-8 lg:h-8 text-black" />
                    </motion.div>

                    {/* Title */}
                    <h3
                      className={`text-xl lg:text-2xl font-semibold transition-colors duration-300 ${
                        isActive ? "text-green-400" : "text-white group-hover:text-green-400"
                      }`}
                    >
                      {reason.title}
                    </h3>

                    {/* Description */}
                    <p className="text-gray-400 leading-relaxed text-sm lg:text-base">{reason.description}</p>

                    {/* Benefits List */}
                    <motion.div
                      className="space-y-2"
                      initial={{ opacity: 0.7 }}
                      animate={{ opacity: isActive ? 1 : 0.7 }}
                      transition={{ duration: 0.3 }}
                    >
                      {reason.benefits.map((benefit, benefitIndex) => (
                        <motion.div
                          key={benefitIndex}
                          className="flex items-center space-x-3"
                          initial={{ x: -10, opacity: 0 }}
                          animate={isInView ? { x: 0, opacity: 1 } : {}}
                          transition={{ duration: 0.4, delay: index * 0.1 + benefitIndex * 0.1 }}
                        >
                          <motion.div
                            animate={{
                              scale: isActive ? 1.2 : 1,
                              rotate: isActive ? 360 : 0,
                            }}
                            transition={{ duration: 0.4, delay: benefitIndex * 0.1 }}
                          >
                            <CheckCircle className={`w-4 h-4 text-green-400 ${isActive ? "drop-shadow-lg" : ""}`} />
                          </motion.div>
                          <span
                            className={`text-sm lg:text-base transition-colors duration-300 ${
                              isActive ? "text-gray-200" : "text-gray-300"
                            }`}
                          >
                            {benefit}
                          </span>
                        </motion.div>
                      ))}
                    </motion.div>

                    {/* Progress bar */}
                    <motion.div
                      className={`w-0 h-1 bg-gradient-to-r ${reason.color} rounded-full transition-all duration-500 ${
                        isActive ? "w-full shadow-lg" : "group-hover:w-1/2"
                      }`}
                    />
                  </div>

                  {/* Hover indicator */}
                  <motion.div
                    className="absolute top-4 right-4 w-2 h-2 bg-green-400 rounded-full opacity-0"
                    animate={{
                      opacity: isActive ? 1 : 0,
                      scale: isActive ? [1, 1.5, 1] : 1,
                    }}
                    transition={{
                      opacity: { duration: 0.3 },
                      scale: { duration: 1, repeat: Number.POSITIVE_INFINITY },
                    }}
                  />
                </motion.div>
              </motion.div>
            )
          })}
        </div>

        {/* Summary Stats */}
        <motion.div
          className="mt-16 grid grid-cols-2 md:grid-cols-4 gap-6 lg:gap-8"
          initial={{ opacity: 0, y: 30 }}
          animate={isInView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.6, delay: 0.8 }}
        >
          {[
            { value: "30+", label: "–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –≤–∫—É—Å–æ–≤" },
            { value: "4", label: "–õ–∏–Ω–µ–π–∫–∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏" },
            { value: "24/7", label: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤" },
            { value: "100%", label: "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è" },
          ].map((stat, index) => (
            <motion.div
              key={index}
              className="text-center p-4 bg-gray-800/30 rounded-xl border border-gray-700/30 hover:border-green-400/30 transition-all duration-300"
              whileHover={{ scale: 1.05, y: -2 }}
              transition={{ duration: 0.2 }}
            >
              <div className="text-2xl lg:text-3xl font-bold bg-gradient-to-r from-green-400 to-purple-500 bg-clip-text text-transparent mb-2">
                {stat.value}
              </div>
              <div className="text-gray-400 text-sm lg:text-base">{stat.label}</div>
            </motion.div>
          ))}
        </motion.div>
      </div>
    </section>
  )
}
